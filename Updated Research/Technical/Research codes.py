## Reproducible Research - Spam Detection Project

## Packages Load

import pandas as pd
import numpy as np

## Data load

data = pd.read_csv("C:/Users/justy/Desktop/Info/Inne/DSC/UW/Semestr IV/RR/RR_Project/Updated Research/spam_ham_dataset.csv")

## DSC 2023.06.14

## Data exploration - let us check how the columns look like and delete unnecessary ones and then move to preprocessing
## We dont need the first column 'Unnamed: 0' as it is just an ID
## The columns 'label' and 'label_num' depict the same thing, let us only leave 'label_num' that represent spam (1) and non-spam (0) label

data.describe
data.columns

del data['Unnamed: 0']
del data['label']

## Due to the fact that some variables that will be obtained from raw text the 'text' column will be copied to the new one named 'text_raw'

data['text_raw'] = data['text']

## Data preprocessing - we only need to take care of the text column

## Convert text to lowercase - the iteration is required to go through each mail (it seems that the text was already in lower case but just to make sure let us do it again)

data['text'][0]

for i in range(0,len(data)):
    data['text'][i] = data['text'][i].lower()

## Check if it worked

data['text'][0]

## Extract frequencied of the words from the text - sample code generated by chat GPT (Query: 'how to count word frequency in the text in python?')

def count_word_frequency(text):
    # Step 1: Tokenize the text
    tokens = text.split()

    # Step 2: Create a dictionary
    word_frequency = {}

    # Step 3 and 4: Iterate over the tokens and update word frequency
    for token in tokens:
        if token in word_frequency:
            word_frequency[token] += 1
        else:
            word_frequency[token] = 1

    # Step 5: Print or manipulate the results
    for word, frequency in word_frequency.items():
        print(f"{word}: {frequency}")

# Example usage
text = "This is a sample text. This text is used to demonstrate word frequency counting."
count_word_frequency(text)
